// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rent4Students.Infrastructure.Data;

#nullable disable

namespace Rent4Students.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250203074915_AddSecretaryNameField")]
    partial class AddSecretaryNameField
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rent4Students.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FacultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GoogleMaps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ListingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PropertyOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UniversityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId")
                        .IsUnique()
                        .HasFilter("[FacultyId] IS NOT NULL");

                    b.HasIndex("ListingId")
                        .IsUnique()
                        .HasFilter("[ListingId] IS NOT NULL");

                    b.HasIndex("PropertyOwnerId")
                        .IsUnique()
                        .HasFilter("[PropertyOwnerId] IS NOT NULL");

                    b.HasIndex("StudentId")
                        .IsUnique()
                        .HasFilter("[StudentId] IS NOT NULL");

                    b.HasIndex("UniversityId")
                        .IsUnique()
                        .HasFilter("[UniversityId] IS NOT NULL");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Enums.Allergy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Allergy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "No Allergies"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Peanuts/Nuts"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dairy"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Eggs"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Wheat"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Soy"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Fish"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Pollen"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Dust Mites"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Mold"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Cats"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Dogs"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Latex"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Fragrances"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Cosmetic Products"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Detergents and Soaps"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Bee Stings"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Wasp Stings"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Ant Stings"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Medications"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Enums.DocumentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DocumentStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Approved"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Waiting"
                        });
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Enums.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DocumentType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "RentContract"
                        },
                        new
                        {
                            Id = 2,
                            Name = "FinancialHelp"
                        });
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Enums.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Male"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Female"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Enums.Hobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hobby");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Painting"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Singing"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Calligraphy"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Photography"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Graphic Design"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Playing an Instrument"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Knitting/Crocheting"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Sewing/Fashion Design"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Dancing"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Stand-up Comedy"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Magic Tricks"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Writing"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Reading"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Blogging"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Running/Jogging"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Yoga"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Pilates"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Swimming"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Hiking"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Cycling"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Martial Arts"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Football"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Basketball"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Volleyball"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Handball"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Rock Climbing"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Gymnastics"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Gaming"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Programming/Coding"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Drawing"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Robotics"
                        },
                        new
                        {
                            Id = 32,
                            Name = "VR"
                        },
                        new
                        {
                            Id = 33,
                            Name = "3D Printing"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Drone Flying"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Cooking"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Baking"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Coffee Brewing"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Cake Decorating"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Gardening"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Bird Watching"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Camping"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Fishing"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Geocaching"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Stargazingg"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Collecting Stamps"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Coin Collecting"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Collecting Action Figures"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Vinyl Records Collecting"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Fossil or Rock Collecting"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Model Building"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Origami"
                        },
                        new
                        {
                            Id = 52,
                            Name = "Beadwork"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Puzzles"
                        },
                        new
                        {
                            Id = 54,
                            Name = "Chess"
                        },
                        new
                        {
                            Id = 55,
                            Name = "Sudoku"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Traveling"
                        },
                        new
                        {
                            Id = 57,
                            Name = "Road Tripping"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Backpacking"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Movie Watching"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Podcasting"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Streaming/Content Creation"
                        },
                        new
                        {
                            Id = 62,
                            Name = "Astrology"
                        },
                        new
                        {
                            Id = 63,
                            Name = "Cosplaying"
                        },
                        new
                        {
                            Id = 64,
                            Name = "Parkour"
                        },
                        new
                        {
                            Id = 65,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Enums.ListingFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ListingFeature");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "FurnishedStatus",
                            Value = "Furnished"
                        },
                        new
                        {
                            Id = 2,
                            Name = "FurnishedStatus",
                            Value = "Semi-Furnished"
                        },
                        new
                        {
                            Id = 3,
                            Name = "FurnishedStatus",
                            Value = "Unfurnished"
                        },
                        new
                        {
                            Id = 4,
                            Name = "NumberOfRooms",
                            Value = "1"
                        },
                        new
                        {
                            Id = 5,
                            Name = "NumberOfRooms",
                            Value = "2"
                        },
                        new
                        {
                            Id = 6,
                            Name = "NumberOfRooms",
                            Value = "3"
                        },
                        new
                        {
                            Id = 7,
                            Name = "NumberOfRooms",
                            Value = "4"
                        },
                        new
                        {
                            Id = 8,
                            Name = "AppartmentLayout",
                            Value = "ClosedSpace"
                        },
                        new
                        {
                            Id = 9,
                            Name = "AppartmentLayout",
                            Value = "Semi-ClosedSpace"
                        },
                        new
                        {
                            Id = 10,
                            Name = "AppartmentLayout",
                            Value = "OpenSpace"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Heating",
                            Value = "Central"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Heating",
                            Value = "Electrical"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Heating",
                            Value = "City Provided"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Elevator",
                            Value = "Yes"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Elevator",
                            Value = "No"
                        },
                        new
                        {
                            Id = 16,
                            Name = "FloorNumber",
                            Value = "Ground"
                        },
                        new
                        {
                            Id = 17,
                            Name = "FloorNumber",
                            Value = "1"
                        },
                        new
                        {
                            Id = 18,
                            Name = "FloorNumber",
                            Value = "2"
                        },
                        new
                        {
                            Id = 19,
                            Name = "FloorNumber",
                            Value = "3"
                        },
                        new
                        {
                            Id = 20,
                            Name = "FloorNumber",
                            Value = "4"
                        },
                        new
                        {
                            Id = 21,
                            Name = "FloorNumber",
                            Value = "5"
                        },
                        new
                        {
                            Id = 22,
                            Name = "FloorNumber",
                            Value = "6"
                        },
                        new
                        {
                            Id = 23,
                            Name = "FloorNumber",
                            Value = "7"
                        },
                        new
                        {
                            Id = 24,
                            Name = "FloorNumber",
                            Value = "8"
                        },
                        new
                        {
                            Id = 25,
                            Name = "FloorNumber",
                            Value = "9"
                        },
                        new
                        {
                            Id = 26,
                            Name = "FloorNumber",
                            Value = "10"
                        },
                        new
                        {
                            Id = 27,
                            Name = "FloorNumber",
                            Value = "11"
                        },
                        new
                        {
                            Id = 28,
                            Name = "FloorNumber",
                            Value = "12"
                        },
                        new
                        {
                            Id = 29,
                            Name = "FloorNumber",
                            Value = "13"
                        },
                        new
                        {
                            Id = 30,
                            Name = "FloorNumber",
                            Value = "14"
                        },
                        new
                        {
                            Id = 31,
                            Name = "FloorNumber",
                            Value = "15"
                        },
                        new
                        {
                            Id = 32,
                            Name = "FloorNumber",
                            Value = "16"
                        },
                        new
                        {
                            Id = 33,
                            Name = "FloorNumber",
                            Value = "17"
                        },
                        new
                        {
                            Id = 34,
                            Name = "FloorNumber",
                            Value = "18"
                        },
                        new
                        {
                            Id = 35,
                            Name = "FloorNumber",
                            Value = "19"
                        },
                        new
                        {
                            Id = 36,
                            Name = "FloorNumber",
                            Value = "20"
                        },
                        new
                        {
                            Id = 37,
                            Name = "PetPolicy",
                            Value = "Allowed"
                        },
                        new
                        {
                            Id = 38,
                            Name = "PetPolicy",
                            Value = "Not Allowed"
                        },
                        new
                        {
                            Id = 39,
                            Name = "SmokingPolicy",
                            Value = "Allowed"
                        },
                        new
                        {
                            Id = 40,
                            Name = "SmokingPolicy",
                            Value = "Not Allowed"
                        },
                        new
                        {
                            Id = 41,
                            Name = "RentFelxibility",
                            Value = "Flexible"
                        },
                        new
                        {
                            Id = 42,
                            Name = "RentFlexibility",
                            Value = "Fixed-Period"
                        },
                        new
                        {
                            Id = 43,
                            Name = "MinimumRentPeriod",
                            Value = "6 months"
                        },
                        new
                        {
                            Id = 44,
                            Name = "MinimumRentPeriod",
                            Value = "12 months"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Facilities",
                            Value = "Fridge"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Facilities",
                            Value = "Microwave"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Facilities",
                            Value = "Oven"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Facilities",
                            Value = "Stove"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Facilities",
                            Value = "Dishwasher"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Facilities",
                            Value = "Coffe Maker"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Facilities",
                            Value = "Toaster"
                        },
                        new
                        {
                            Id = 52,
                            Name = "Facilities",
                            Value = "Kettle"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Facilities",
                            Value = "Washing Machine"
                        },
                        new
                        {
                            Id = 54,
                            Name = "Facilities",
                            Value = "Dryer"
                        },
                        new
                        {
                            Id = 55,
                            Name = "Facilities",
                            Value = "Iron"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Facilities",
                            Value = "TV"
                        },
                        new
                        {
                            Id = 57,
                            Name = "Facilities",
                            Value = "Furniture"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Facilities",
                            Value = "Intercom"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Facilities",
                            Value = "Blinds"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Facilities",
                            Value = "Internet"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Facilities",
                            Value = "Metal Door"
                        },
                        new
                        {
                            Id = 62,
                            Name = "Facilities",
                            Value = "AC"
                        },
                        new
                        {
                            Id = 63,
                            Name = "Facilities",
                            Value = "Parking Space"
                        },
                        new
                        {
                            Id = 64,
                            Name = "BuildingMaterial",
                            Value = "Brick"
                        },
                        new
                        {
                            Id = 65,
                            Name = "BuildingMaterial",
                            Value = "BCA"
                        },
                        new
                        {
                            Id = 66,
                            Name = "WindowsMaterial",
                            Value = "Wood"
                        },
                        new
                        {
                            Id = 67,
                            Name = "WindowsMaterial",
                            Value = "Plastic"
                        },
                        new
                        {
                            Id = 68,
                            Name = "Balcony",
                            Value = "No"
                        },
                        new
                        {
                            Id = 69,
                            Name = "Balcony",
                            Value = "1"
                        },
                        new
                        {
                            Id = 70,
                            Name = "Balcony",
                            Value = "2"
                        },
                        new
                        {
                            Id = 71,
                            Name = "Balcony",
                            Value = "3"
                        },
                        new
                        {
                            Id = 72,
                            Name = "Balcony",
                            Value = "4"
                        },
                        new
                        {
                            Id = 73,
                            Name = "AdditionalStorage",
                            Value = "No"
                        },
                        new
                        {
                            Id = 74,
                            Name = "AdditionalStorage",
                            Value = "Basement"
                        },
                        new
                        {
                            Id = 75,
                            Name = "AdditionalStorage",
                            Value = "StorageRoom"
                        });
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Enums.ListingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ListingType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Apartament"
                        },
                        new
                        {
                            Id = 2,
                            Name = "MicroApartament"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Single"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Shared"
                        });
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Enums.Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nationality");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Afghan"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Albanian"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Algerian"
                        },
                        new
                        {
                            Id = 4,
                            Name = "American"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Andorran"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Angolan"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Antiguan"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Argentine"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Armenian"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Australian"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Austrian"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Azerbaijani"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Bahamian"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Bahraini"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Bangladeshi"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Barbadian"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Belarusian"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Belgian"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Belizean"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Beninese"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Bhutanese"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Bolivian"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Bosnian"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Botswanan"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Brazilian"
                        },
                        new
                        {
                            Id = 26,
                            Name = "British"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Bruneian"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Bulgarian"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Burkinabe"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Burmese"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Burundian"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Cambodian"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Cameroonian"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Canadian"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Cape Verdean"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Central African"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Chadian"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Chilean"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Chinese"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Colombian"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Comorian"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Congolese (Congo-Brazzaville)"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Congolese (Congo-Kinshasa)"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Costa Rican"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Croatian"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Cuban"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Cypriot"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Czech"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Danish"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Djiboutian"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Dominican (Dominican Republic)"
                        },
                        new
                        {
                            Id = 52,
                            Name = "Dominican (Dominica)"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Dutch"
                        },
                        new
                        {
                            Id = 54,
                            Name = "East Timorese"
                        },
                        new
                        {
                            Id = 55,
                            Name = "Ecuadorian"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Egyptian"
                        },
                        new
                        {
                            Id = 57,
                            Name = "Emirati"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Equatorial Guinean"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Eritrean"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Estonian"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Eswatini (Swazi)"
                        },
                        new
                        {
                            Id = 62,
                            Name = "Ethiopian"
                        },
                        new
                        {
                            Id = 63,
                            Name = "Fijian"
                        },
                        new
                        {
                            Id = 64,
                            Name = "Filipino"
                        },
                        new
                        {
                            Id = 65,
                            Name = "Finnish"
                        },
                        new
                        {
                            Id = 66,
                            Name = "French"
                        },
                        new
                        {
                            Id = 67,
                            Name = "Gabonese"
                        },
                        new
                        {
                            Id = 68,
                            Name = "Gambian"
                        },
                        new
                        {
                            Id = 69,
                            Name = "Georgian"
                        },
                        new
                        {
                            Id = 70,
                            Name = "German"
                        },
                        new
                        {
                            Id = 71,
                            Name = "Ghanaian"
                        },
                        new
                        {
                            Id = 72,
                            Name = "Greek"
                        },
                        new
                        {
                            Id = 73,
                            Name = "Grenadian"
                        },
                        new
                        {
                            Id = 74,
                            Name = "Guatemalan"
                        },
                        new
                        {
                            Id = 75,
                            Name = "Guinean"
                        },
                        new
                        {
                            Id = 76,
                            Name = "Guyanese"
                        },
                        new
                        {
                            Id = 77,
                            Name = "Haitian"
                        },
                        new
                        {
                            Id = 78,
                            Name = "Honduran"
                        },
                        new
                        {
                            Id = 79,
                            Name = "Hungarian"
                        },
                        new
                        {
                            Id = 80,
                            Name = "Icelander"
                        },
                        new
                        {
                            Id = 81,
                            Name = "Indian"
                        },
                        new
                        {
                            Id = 82,
                            Name = "Indonesian"
                        },
                        new
                        {
                            Id = 83,
                            Name = "Iranian"
                        },
                        new
                        {
                            Id = 84,
                            Name = "Iraqi"
                        },
                        new
                        {
                            Id = 85,
                            Name = "Irish"
                        },
                        new
                        {
                            Id = 86,
                            Name = "Israeli"
                        },
                        new
                        {
                            Id = 87,
                            Name = "Italian"
                        },
                        new
                        {
                            Id = 88,
                            Name = "Ivorian"
                        },
                        new
                        {
                            Id = 89,
                            Name = "Jamaican"
                        },
                        new
                        {
                            Id = 90,
                            Name = "Japanese"
                        },
                        new
                        {
                            Id = 91,
                            Name = "Jordanian"
                        },
                        new
                        {
                            Id = 92,
                            Name = "Kazakh"
                        },
                        new
                        {
                            Id = 93,
                            Name = "Kenyan"
                        },
                        new
                        {
                            Id = 94,
                            Name = "Kiribati"
                        },
                        new
                        {
                            Id = 95,
                            Name = "Korean (North)"
                        },
                        new
                        {
                            Id = 96,
                            Name = "Korean (South)"
                        },
                        new
                        {
                            Id = 97,
                            Name = "Kosovar"
                        },
                        new
                        {
                            Id = 98,
                            Name = "Kuwaiti"
                        },
                        new
                        {
                            Id = 99,
                            Name = "Kyrgyz"
                        },
                        new
                        {
                            Id = 100,
                            Name = "Lao"
                        },
                        new
                        {
                            Id = 101,
                            Name = "Latvian"
                        },
                        new
                        {
                            Id = 102,
                            Name = "Lebanese"
                        },
                        new
                        {
                            Id = 103,
                            Name = "Liberian"
                        },
                        new
                        {
                            Id = 104,
                            Name = "Libyan"
                        },
                        new
                        {
                            Id = 105,
                            Name = "Liechtensteiner"
                        },
                        new
                        {
                            Id = 106,
                            Name = "Lithuanian"
                        },
                        new
                        {
                            Id = 107,
                            Name = "Luxembourger"
                        },
                        new
                        {
                            Id = 108,
                            Name = "Madagascan"
                        },
                        new
                        {
                            Id = 109,
                            Name = "Malawian"
                        },
                        new
                        {
                            Id = 110,
                            Name = "Malaysian"
                        },
                        new
                        {
                            Id = 111,
                            Name = "Maldivian"
                        },
                        new
                        {
                            Id = 112,
                            Name = "Malian"
                        },
                        new
                        {
                            Id = 113,
                            Name = "Maltese"
                        },
                        new
                        {
                            Id = 114,
                            Name = "Marshallese"
                        },
                        new
                        {
                            Id = 115,
                            Name = "Mauritanian"
                        },
                        new
                        {
                            Id = 116,
                            Name = "Mauritian"
                        },
                        new
                        {
                            Id = 117,
                            Name = "Mexican"
                        },
                        new
                        {
                            Id = 118,
                            Name = "Micronesian"
                        },
                        new
                        {
                            Id = 119,
                            Name = "Moldovan"
                        },
                        new
                        {
                            Id = 120,
                            Name = "Monacan"
                        },
                        new
                        {
                            Id = 121,
                            Name = "Mongolian"
                        },
                        new
                        {
                            Id = 122,
                            Name = "Montenegrin"
                        },
                        new
                        {
                            Id = 123,
                            Name = "Moroccan"
                        },
                        new
                        {
                            Id = 124,
                            Name = "Mozambican"
                        },
                        new
                        {
                            Id = 125,
                            Name = "Namibian"
                        },
                        new
                        {
                            Id = 126,
                            Name = "Nauruan"
                        },
                        new
                        {
                            Id = 127,
                            Name = "Nepalese"
                        },
                        new
                        {
                            Id = 128,
                            Name = "New Zealander"
                        },
                        new
                        {
                            Id = 129,
                            Name = "Nicaraguan"
                        },
                        new
                        {
                            Id = 130,
                            Name = "Nigerien"
                        },
                        new
                        {
                            Id = 131,
                            Name = "Nigerian"
                        },
                        new
                        {
                            Id = 132,
                            Name = "Norwegian"
                        },
                        new
                        {
                            Id = 133,
                            Name = "Omani"
                        },
                        new
                        {
                            Id = 134,
                            Name = "Pakistani"
                        },
                        new
                        {
                            Id = 135,
                            Name = "Palauan"
                        },
                        new
                        {
                            Id = 136,
                            Name = "Palestinian"
                        },
                        new
                        {
                            Id = 137,
                            Name = "Panamanian"
                        },
                        new
                        {
                            Id = 138,
                            Name = "Papua New Guinean"
                        },
                        new
                        {
                            Id = 139,
                            Name = "Paraguayan"
                        },
                        new
                        {
                            Id = 140,
                            Name = "Peruvian"
                        },
                        new
                        {
                            Id = 141,
                            Name = "Polish"
                        },
                        new
                        {
                            Id = 142,
                            Name = "Portuguese"
                        },
                        new
                        {
                            Id = 143,
                            Name = "Qatari"
                        },
                        new
                        {
                            Id = 144,
                            Name = "Romanian"
                        },
                        new
                        {
                            Id = 145,
                            Name = "Russian"
                        },
                        new
                        {
                            Id = 146,
                            Name = "Rwandan"
                        },
                        new
                        {
                            Id = 147,
                            Name = "Saint Lucian"
                        },
                        new
                        {
                            Id = 148,
                            Name = "Salvadoran"
                        },
                        new
                        {
                            Id = 149,
                            Name = "Samoan"
                        },
                        new
                        {
                            Id = 150,
                            Name = "San Marinese"
                        },
                        new
                        {
                            Id = 151,
                            Name = "Sao Tomean"
                        },
                        new
                        {
                            Id = 152,
                            Name = "Saudi"
                        },
                        new
                        {
                            Id = 153,
                            Name = "Senegalese"
                        },
                        new
                        {
                            Id = 154,
                            Name = "Serbian"
                        },
                        new
                        {
                            Id = 155,
                            Name = "Seychellois"
                        },
                        new
                        {
                            Id = 156,
                            Name = "Sierra Leonean"
                        },
                        new
                        {
                            Id = 157,
                            Name = "Singaporean"
                        },
                        new
                        {
                            Id = 158,
                            Name = "Slovak"
                        },
                        new
                        {
                            Id = 159,
                            Name = "Slovenian"
                        },
                        new
                        {
                            Id = 160,
                            Name = "Solomon Islander"
                        },
                        new
                        {
                            Id = 161,
                            Name = "Somali"
                        },
                        new
                        {
                            Id = 162,
                            Name = "South African"
                        },
                        new
                        {
                            Id = 163,
                            Name = "South Sudanese"
                        },
                        new
                        {
                            Id = 164,
                            Name = "Spanish"
                        },
                        new
                        {
                            Id = 165,
                            Name = "Sri Lankan"
                        },
                        new
                        {
                            Id = 166,
                            Name = "Sudanese"
                        },
                        new
                        {
                            Id = 167,
                            Name = "Surinamese"
                        },
                        new
                        {
                            Id = 168,
                            Name = "Swedish"
                        },
                        new
                        {
                            Id = 169,
                            Name = "Swiss"
                        },
                        new
                        {
                            Id = 170,
                            Name = "Syrian"
                        },
                        new
                        {
                            Id = 171,
                            Name = "Tajik"
                        },
                        new
                        {
                            Id = 172,
                            Name = "Tanzanian"
                        },
                        new
                        {
                            Id = 173,
                            Name = "Thai"
                        },
                        new
                        {
                            Id = 174,
                            Name = "Togolese"
                        },
                        new
                        {
                            Id = 175,
                            Name = "Tongan"
                        },
                        new
                        {
                            Id = 176,
                            Name = "Trinidadian/Tobagonian"
                        },
                        new
                        {
                            Id = 177,
                            Name = "Tunisian"
                        },
                        new
                        {
                            Id = 178,
                            Name = "Turkish"
                        },
                        new
                        {
                            Id = 179,
                            Name = "Turkmen"
                        },
                        new
                        {
                            Id = 180,
                            Name = "Tuvaluan"
                        },
                        new
                        {
                            Id = 181,
                            Name = "Ugandan"
                        },
                        new
                        {
                            Id = 182,
                            Name = "Ukrainian"
                        },
                        new
                        {
                            Id = 183,
                            Name = "Uruguayan"
                        },
                        new
                        {
                            Id = 184,
                            Name = "Uzbek"
                        },
                        new
                        {
                            Id = 185,
                            Name = "Vanuatuan"
                        },
                        new
                        {
                            Id = 186,
                            Name = "Vatican"
                        },
                        new
                        {
                            Id = 187,
                            Name = "Venezuelan"
                        },
                        new
                        {
                            Id = 188,
                            Name = "Vietnamese"
                        },
                        new
                        {
                            Id = 189,
                            Name = "Yemeni"
                        },
                        new
                        {
                            Id = 190,
                            Name = "Zambian"
                        },
                        new
                        {
                            Id = 191,
                            Name = "Zimbabwean"
                        });
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Enums.PersonalityAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonalityAttribute");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Occupation",
                            Value = "Part-Time Job"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Occupation",
                            Value = "Full-Time Job"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Occupation",
                            Value = "Student"
                        },
                        new
                        {
                            Id = 4,
                            Name = "ReligiousBeliefs",
                            Value = "Orthodoxy"
                        },
                        new
                        {
                            Id = 5,
                            Name = "ReligiousBeliefs",
                            Value = "Romano Catholicism"
                        },
                        new
                        {
                            Id = 6,
                            Name = "ReligiousBeliefs",
                            Value = "Greek Catholicism"
                        },
                        new
                        {
                            Id = 7,
                            Name = "ReligiousBeliefs",
                            Value = "Calvinist"
                        },
                        new
                        {
                            Id = 8,
                            Name = "ReligiousBeliefs",
                            Value = "Lutheran"
                        },
                        new
                        {
                            Id = 9,
                            Name = "ReligiousBeliefs",
                            Value = "Pentecostal Christian"
                        },
                        new
                        {
                            Id = 10,
                            Name = "ReligiousBeliefs",
                            Value = "Islam"
                        },
                        new
                        {
                            Id = 11,
                            Name = "ReligiousBeliefs",
                            Value = "Judaism"
                        },
                        new
                        {
                            Id = 12,
                            Name = "ReligiousBeliefs",
                            Value = "Baptist"
                        },
                        new
                        {
                            Id = 13,
                            Name = "ReligiousBeliefs",
                            Value = "Atheism/Agnosticism"
                        },
                        new
                        {
                            Id = 14,
                            Name = "ReligiousBeliefs",
                            Value = "Adventist"
                        },
                        new
                        {
                            Id = 15,
                            Name = "ReligiousBeliefs",
                            Value = "Jehovah’s Witnesses"
                        },
                        new
                        {
                            Id = 16,
                            Name = "ReligiousBeliefs",
                            Value = "Buddhism"
                        },
                        new
                        {
                            Id = 17,
                            Name = "ReligiousBeliefs",
                            Value = "Hindu"
                        },
                        new
                        {
                            Id = 18,
                            Name = "ReligiousBeliefs",
                            Value = "Other"
                        },
                        new
                        {
                            Id = 19,
                            Name = "DietaryPreferences",
                            Value = "No Preferences"
                        },
                        new
                        {
                            Id = 20,
                            Name = "DietaryPreferences",
                            Value = "Vegetarian"
                        },
                        new
                        {
                            Id = 21,
                            Name = "DietaryPreferences",
                            Value = "Vegan"
                        },
                        new
                        {
                            Id = 22,
                            Name = "DietaryPreferences",
                            Value = "Pescatarian"
                        },
                        new
                        {
                            Id = 23,
                            Name = "DietaryPreferences",
                            Value = "Gluten-Free"
                        },
                        new
                        {
                            Id = 24,
                            Name = "DietaryPreferences",
                            Value = "Lactose-Free"
                        },
                        new
                        {
                            Id = 25,
                            Name = "DietaryPreferences",
                            Value = "Keto"
                        },
                        new
                        {
                            Id = 26,
                            Name = "DietaryPreferences",
                            Value = "Diabetic-Friendly"
                        },
                        new
                        {
                            Id = 27,
                            Name = "DietaryPreferences",
                            Value = "Halal"
                        },
                        new
                        {
                            Id = 28,
                            Name = "DietaryPreferences",
                            Value = "Kosher"
                        },
                        new
                        {
                            Id = 29,
                            Name = "DietaryPreferences",
                            Value = "Organic"
                        },
                        new
                        {
                            Id = 30,
                            Name = "DietaryPreferences",
                            Value = "Other"
                        },
                        new
                        {
                            Id = 31,
                            Name = "SleepingHours",
                            Value = "Early Bird"
                        },
                        new
                        {
                            Id = 32,
                            Name = "SleepingHours",
                            Value = "Night Owl"
                        },
                        new
                        {
                            Id = 33,
                            Name = "SleepingHours",
                            Value = "Flexible"
                        },
                        new
                        {
                            Id = 34,
                            Name = "SleepingHours",
                            Value = "Other"
                        },
                        new
                        {
                            Id = 35,
                            Name = "SmokingHabbits",
                            Value = "Smoker"
                        },
                        new
                        {
                            Id = 36,
                            Name = "SmokingHabbits",
                            Value = "Non-Smoker"
                        },
                        new
                        {
                            Id = 37,
                            Name = "SmokingHabbits",
                            Value = "Doesn't Mind"
                        },
                        new
                        {
                            Id = 38,
                            Name = "AlcoholConsumption",
                            Value = "Regular"
                        },
                        new
                        {
                            Id = 39,
                            Name = "AlcoholConsumption",
                            Value = "Social"
                        },
                        new
                        {
                            Id = 40,
                            Name = "AlcoholConsumption",
                            Value = "Rarely"
                        },
                        new
                        {
                            Id = 41,
                            Name = "AlcoholConsumption",
                            Value = "Never"
                        },
                        new
                        {
                            Id = 42,
                            Name = "PetOwnership",
                            Value = "No"
                        },
                        new
                        {
                            Id = 43,
                            Name = "PetOwnership",
                            Value = "Cat"
                        },
                        new
                        {
                            Id = 44,
                            Name = "PetOwnership",
                            Value = "Dog"
                        },
                        new
                        {
                            Id = 45,
                            Name = "PetOwnership",
                            Value = "Bird"
                        },
                        new
                        {
                            Id = 46,
                            Name = "PetOwnership",
                            Value = "Fish"
                        },
                        new
                        {
                            Id = 47,
                            Name = "PetOwnership",
                            Value = "Rodent"
                        },
                        new
                        {
                            Id = 48,
                            Name = "PetOwnership",
                            Value = "Other"
                        },
                        new
                        {
                            Id = 49,
                            Name = "PetPreferences",
                            Value = "Likes Pets"
                        },
                        new
                        {
                            Id = 50,
                            Name = "PetPreferences",
                            Value = "Doesn't Likes Pets"
                        },
                        new
                        {
                            Id = 51,
                            Name = "PetPreferences",
                            Value = "Allergic"
                        },
                        new
                        {
                            Id = 52,
                            Name = "PetPreferences",
                            Value = "No Preference"
                        },
                        new
                        {
                            Id = 53,
                            Name = "NoiseTolerance",
                            Value = "Quiet"
                        },
                        new
                        {
                            Id = 54,
                            Name = "NoiseTolerance",
                            Value = "Moderate"
                        },
                        new
                        {
                            Id = 55,
                            Name = "NoiseTolerance",
                            Value = "Doesn't Mind"
                        },
                        new
                        {
                            Id = 56,
                            Name = "CleanlinessLevel",
                            Value = "Very Clean"
                        },
                        new
                        {
                            Id = 57,
                            Name = "CleanlinessLevel",
                            Value = "Moderate"
                        },
                        new
                        {
                            Id = 58,
                            Name = "CleanlinessLevel",
                            Value = "Laid-Back"
                        },
                        new
                        {
                            Id = 59,
                            Name = "CookingHabbits",
                            Value = "Loves Cooking"
                        },
                        new
                        {
                            Id = 60,
                            Name = "CookingHabbits",
                            Value = "Cooks Occasionally"
                        },
                        new
                        {
                            Id = 61,
                            Name = "CookingHabbits",
                            Value = "Doesn't Cook"
                        },
                        new
                        {
                            Id = 62,
                            Name = "PreferedLivingArrangement",
                            Value = "Private Room"
                        },
                        new
                        {
                            Id = 63,
                            Name = "PreferedLivingArrangement",
                            Value = "Shared Room"
                        },
                        new
                        {
                            Id = 64,
                            Name = "PreferedLivingArrangement",
                            Value = "Doesn't Mind"
                        },
                        new
                        {
                            Id = 65,
                            Name = "ExerciseRoutine",
                            Value = "Gym Regular"
                        },
                        new
                        {
                            Id = 66,
                            Name = "ExerciseRoutine",
                            Value = "Outdoor Activities"
                        },
                        new
                        {
                            Id = 67,
                            Name = "ExerciseRoutine",
                            Value = "Doesn't Exercise Regularly"
                        },
                        new
                        {
                            Id = 68,
                            Name = "SocialHabbits",
                            Value = "Outgoing"
                        },
                        new
                        {
                            Id = 69,
                            Name = "SocialHabbits",
                            Value = "Introverted"
                        },
                        new
                        {
                            Id = 70,
                            Name = "SocialHabbits",
                            Value = "Balanced"
                        },
                        new
                        {
                            Id = 71,
                            Name = "PrefferedRoommateGender",
                            Value = "Same Gender"
                        },
                        new
                        {
                            Id = 72,
                            Name = "PrefferedRoommateGender",
                            Value = "No Preference"
                        },
                        new
                        {
                            Id = 73,
                            Name = "GuestsTolerance",
                            Value = "Frequent Visitors"
                        },
                        new
                        {
                            Id = 74,
                            Name = "GuestsTolerance",
                            Value = "Rarely"
                        },
                        new
                        {
                            Id = 75,
                            Name = "GuestsTolerance",
                            Value = "No Visitors"
                        },
                        new
                        {
                            Id = 76,
                            Name = "StudyEnvironment",
                            Value = "Quiet"
                        },
                        new
                        {
                            Id = 77,
                            Name = "StudyEnvironment",
                            Value = "Collaborative"
                        },
                        new
                        {
                            Id = 78,
                            Name = "StudyEnvironment",
                            Value = "No Preference"
                        },
                        new
                        {
                            Id = 79,
                            Name = "PrefferedCommunicationMeans",
                            Value = "Text"
                        },
                        new
                        {
                            Id = 80,
                            Name = "PrefferedCommunicationMeans",
                            Value = "Calls"
                        },
                        new
                        {
                            Id = 81,
                            Name = "PrefferedCommunicationMeans",
                            Value = "Face-to-face"
                        },
                        new
                        {
                            Id = 82,
                            Name = "PersonalityType",
                            Value = "Intorvert"
                        },
                        new
                        {
                            Id = 83,
                            Name = "PersonalityType",
                            Value = "Extrovert"
                        },
                        new
                        {
                            Id = 84,
                            Name = "ConflictResolutionStyle",
                            Value = "Direct"
                        },
                        new
                        {
                            Id = 85,
                            Name = "ConflictResolutionStyle",
                            Value = "Passive"
                        },
                        new
                        {
                            Id = 86,
                            Name = "ConflictResolutionStyle",
                            Value = "Mediator"
                        });
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Enums.RentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RentStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Active"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Inactive"
                        });
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Faculty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EncryptedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProfilePhotoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SecretaryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UniversityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UniversityId");

                    b.ToTable("Faculty");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.FinancialHelpDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentStatusId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<Guid?>("FacultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("StorageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentStatusId");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("StudentId");

                    b.ToTable("FinancialHelpDocument");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Joined.LivingAmenity", b =>
                {
                    b.Property<Guid>("ListingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ListingFeatureId")
                        .HasColumnType("int");

                    b.HasKey("ListingId", "ListingFeatureId");

                    b.HasIndex("ListingFeatureId");

                    b.ToTable("LivingAmenity");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Joined.LivingPreference", b =>
                {
                    b.Property<int>("ListingFeatureId")
                        .HasColumnType("int");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ListingFeatureId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("LivingPreference");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Joined.RentHistory", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ListingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RentDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RentStatusId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "ListingId");

                    b.HasIndex("ListingId");

                    b.HasIndex("RentDocumentId");

                    b.HasIndex("RentStatusId");

                    b.ToTable("RentHistory");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Joined.StudentAllergies", b =>
                {
                    b.Property<int>("AllergyId")
                        .HasColumnType("int");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AllergyId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentAllergies");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Joined.StudentAttributes", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "AttributeId");

                    b.HasIndex("AttributeId");

                    b.ToTable("StudentAttributes");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Joined.StudentHobbies", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HobbyId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "HobbyId");

                    b.HasIndex("HobbyId");

                    b.ToTable("StudentHobbies");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Joined.StudentRoommate", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoommateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudentId", "RoommateId");

                    b.HasIndex("RoommateId");

                    b.ToTable("StudentRoommate");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Listing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BuildingYear")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepositAmount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ListingTypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("OwnerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RentPrice")
                        .HasColumnType("int");

                    b.Property<float>("Surface")
                        .HasColumnType("real");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ListingTypeId");

                    b.HasIndex("OwnerID");

                    b.ToTable("Listing");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.PropertyOwner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EncryptedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProfilePictureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PropertyOwner");

                    b.HasDiscriminator().HasValue("PropertyOwner");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.RentDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DepositAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentStatusId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MonthlyRent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("RentPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StorageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentStatusId");

                    b.HasIndex("DocumentTypeId");

                    b.ToTable("RentDocuments");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.StoredPhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FacultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ListingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhotoName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PropertyOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UniversityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId")
                        .IsUnique()
                        .HasFilter("[FacultyId] IS NOT NULL");

                    b.HasIndex("ListingId");

                    b.HasIndex("PropertyOwnerId")
                        .IsUnique()
                        .HasFilter("[PropertyOwnerId] IS NOT NULL");

                    b.ToTable("StoredPhoto");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EncryptedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FacultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProfilePhotoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StudentIdNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("YearOfStudy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.HasIndex("GenderId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("ProfilePhotoId")
                        .IsUnique()
                        .HasFilter("[ProfilePhotoId] IS NOT NULL");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.University", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CIF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EncryptedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstitutionalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValidated")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProfilePhotoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProfilePhotoId")
                        .IsUnique()
                        .HasFilter("[ProfilePhotoId] IS NOT NULL");

                    b.ToTable("University");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Agency", b =>
                {
                    b.HasBaseType("Rent4Students.Domain.Entities.PropertyOwner");

                    b.Property<string>("CIF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Agency");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Address", b =>
                {
                    b.HasOne("Rent4Students.Domain.Entities.Faculty", "Faculty")
                        .WithOne("Address")
                        .HasForeignKey("Rent4Students.Domain.Entities.Address", "FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Rent4Students.Domain.Entities.Listing", "Listing")
                        .WithOne("Address")
                        .HasForeignKey("Rent4Students.Domain.Entities.Address", "ListingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Rent4Students.Domain.Entities.PropertyOwner", "PropertyOwner")
                        .WithOne("Address")
                        .HasForeignKey("Rent4Students.Domain.Entities.Address", "PropertyOwnerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Rent4Students.Domain.Entities.Student", "Student")
                        .WithOne("Address")
                        .HasForeignKey("Rent4Students.Domain.Entities.Address", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Rent4Students.Domain.Entities.University", "University")
                        .WithOne("Address")
                        .HasForeignKey("Rent4Students.Domain.Entities.Address", "UniversityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Faculty");

                    b.Navigation("Listing");

                    b.Navigation("PropertyOwner");

                    b.Navigation("Student");

                    b.Navigation("University");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Faculty", b =>
                {
                    b.HasOne("Rent4Students.Domain.Entities.University", "ParentUniversity")
                        .WithMany("Faculties")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ParentUniversity");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.FinancialHelpDocument", b =>
                {
                    b.HasOne("Rent4Students.Domain.Entities.Enums.DocumentStatus", "DocumentStatus")
                        .WithMany("FinancialHelpDocuments")
                        .HasForeignKey("DocumentStatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Rent4Students.Domain.Entities.Enums.DocumentType", "DocumentType")
                        .WithMany("FinancialHelpDocuments")
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Rent4Students.Domain.Entities.Faculty", "Faculty")
                        .WithMany("FinancialHelpDocuments")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Rent4Students.Domain.Entities.Student", "Student")
                        .WithMany("FinancialHelpDocuments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("DocumentStatus");

                    b.Navigation("DocumentType");

                    b.Navigation("Faculty");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Joined.LivingAmenity", b =>
                {
                    b.HasOne("Rent4Students.Domain.Entities.Enums.ListingFeature", "ListingFeature")
                        .WithMany("OfferedAmenities")
                        .HasForeignKey("ListingFeatureId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Rent4Students.Domain.Entities.Listing", "Listing")
                        .WithMany("Amenities")
                        .HasForeignKey("ListingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Listing");

                    b.Navigation("ListingFeature");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Joined.LivingPreference", b =>
                {
                    b.HasOne("Rent4Students.Domain.Entities.Enums.ListingFeature", "ListingFeature")
                        .WithMany("StudentPreferences")
                        .HasForeignKey("ListingFeatureId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Rent4Students.Domain.Entities.Student", "Student")
                        .WithMany("LivingPreferences")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ListingFeature");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Joined.RentHistory", b =>
                {
                    b.HasOne("Rent4Students.Domain.Entities.Listing", "Listing")
                        .WithMany("RentHistory")
                        .HasForeignKey("ListingId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Rent4Students.Domain.Entities.RentDocument", "RentDocument")
                        .WithMany("RentHistories")
                        .HasForeignKey("RentDocumentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Rent4Students.Domain.Entities.Enums.RentStatus", "RentStatus")
                        .WithMany()
                        .HasForeignKey("RentStatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Rent4Students.Domain.Entities.Student", "Student")
                        .WithMany("RentHistory")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Listing");

                    b.Navigation("RentDocument");

                    b.Navigation("RentStatus");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Joined.StudentAllergies", b =>
                {
                    b.HasOne("Rent4Students.Domain.Entities.Enums.Allergy", "Allergy")
                        .WithMany("Allergies")
                        .HasForeignKey("AllergyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Rent4Students.Domain.Entities.Student", "Student")
                        .WithMany("Allergies")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Allergy");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Joined.StudentAttributes", b =>
                {
                    b.HasOne("Rent4Students.Domain.Entities.Enums.PersonalityAttribute", "Attribute")
                        .WithMany("Attributes")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Rent4Students.Domain.Entities.Student", "Student")
                        .WithMany("Attributes")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Attribute");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Joined.StudentHobbies", b =>
                {
                    b.HasOne("Rent4Students.Domain.Entities.Enums.Hobby", "Hobby")
                        .WithMany("StudentHobbies")
                        .HasForeignKey("HobbyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Rent4Students.Domain.Entities.Student", "Student")
                        .WithMany("Hobbies")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Hobby");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Joined.StudentRoommate", b =>
                {
                    b.HasOne("Rent4Students.Domain.Entities.Student", "Roommate")
                        .WithMany()
                        .HasForeignKey("RoommateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Rent4Students.Domain.Entities.Student", "Student")
                        .WithMany("Roommates")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Roommate");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Listing", b =>
                {
                    b.HasOne("Rent4Students.Domain.Entities.Enums.ListingType", "ListingType")
                        .WithMany("Listings")
                        .HasForeignKey("ListingTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Rent4Students.Domain.Entities.PropertyOwner", "Owner")
                        .WithMany("Listings")
                        .HasForeignKey("OwnerID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ListingType");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.RentDocument", b =>
                {
                    b.HasOne("Rent4Students.Domain.Entities.Enums.DocumentStatus", "DocumentStatus")
                        .WithMany("RentDocuments")
                        .HasForeignKey("DocumentStatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Rent4Students.Domain.Entities.Enums.DocumentType", "DocumentType")
                        .WithMany("RentDocuments")
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DocumentStatus");

                    b.Navigation("DocumentType");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.StoredPhoto", b =>
                {
                    b.HasOne("Rent4Students.Domain.Entities.Faculty", "Faculty")
                        .WithOne("ProfilePhoto")
                        .HasForeignKey("Rent4Students.Domain.Entities.StoredPhoto", "FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Rent4Students.Domain.Entities.Listing", "ParentListing")
                        .WithMany("Photos")
                        .HasForeignKey("ListingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Rent4Students.Domain.Entities.PropertyOwner", "PropertyOwner")
                        .WithOne("ProfilePhoto")
                        .HasForeignKey("Rent4Students.Domain.Entities.StoredPhoto", "PropertyOwnerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Faculty");

                    b.Navigation("ParentListing");

                    b.Navigation("PropertyOwner");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Student", b =>
                {
                    b.HasOne("Rent4Students.Domain.Entities.Faculty", "FacultyName")
                        .WithMany("Students")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Rent4Students.Domain.Entities.Enums.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Rent4Students.Domain.Entities.Enums.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Rent4Students.Domain.Entities.StoredPhoto", "ProfilePhoto")
                        .WithOne("Student")
                        .HasForeignKey("Rent4Students.Domain.Entities.Student", "ProfilePhotoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("FacultyName");

                    b.Navigation("Gender");

                    b.Navigation("Nationality");

                    b.Navigation("ProfilePhoto");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.University", b =>
                {
                    b.HasOne("Rent4Students.Domain.Entities.StoredPhoto", "ProfilePhoto")
                        .WithOne("University")
                        .HasForeignKey("Rent4Students.Domain.Entities.University", "ProfilePhotoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ProfilePhoto");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Enums.Allergy", b =>
                {
                    b.Navigation("Allergies");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Enums.DocumentStatus", b =>
                {
                    b.Navigation("FinancialHelpDocuments");

                    b.Navigation("RentDocuments");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Enums.DocumentType", b =>
                {
                    b.Navigation("FinancialHelpDocuments");

                    b.Navigation("RentDocuments");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Enums.Hobby", b =>
                {
                    b.Navigation("StudentHobbies");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Enums.ListingFeature", b =>
                {
                    b.Navigation("OfferedAmenities");

                    b.Navigation("StudentPreferences");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Enums.ListingType", b =>
                {
                    b.Navigation("Listings");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Enums.PersonalityAttribute", b =>
                {
                    b.Navigation("Attributes");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Faculty", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("FinancialHelpDocuments");

                    b.Navigation("ProfilePhoto");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Listing", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Amenities");

                    b.Navigation("Photos");

                    b.Navigation("RentHistory");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.PropertyOwner", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Listings");

                    b.Navigation("ProfilePhoto");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.RentDocument", b =>
                {
                    b.Navigation("RentHistories");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.StoredPhoto", b =>
                {
                    b.Navigation("Student");

                    b.Navigation("University");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.Student", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Allergies");

                    b.Navigation("Attributes");

                    b.Navigation("FinancialHelpDocuments");

                    b.Navigation("Hobbies");

                    b.Navigation("LivingPreferences");

                    b.Navigation("RentHistory");

                    b.Navigation("Roommates");
                });

            modelBuilder.Entity("Rent4Students.Domain.Entities.University", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Faculties");
                });
#pragma warning restore 612, 618
        }
    }
}
